/*
 * Classroom Family Feud!
 * By Evan McQueen for ICS3U
 * 
 * Plays like the original Family Feud game show, but with school-related 
 * questions
 * 
 */




/**
 *
 * @author EvMcQ5970
 */
public class FamilyFeud extends javax.swing.JFrame {

    
    //Array containing surveys
    String[] questionList = {"Name a peripheral device", "Name a cause of WW1", 
        "Name a water sport", "Name an element", "Name a country",
        "Name an animal"};
    
    
    //Variables
    double max = (questionList.length) - 1;
    double min = 0;
    
    double ran;
    
    int sChoice;
    
    String currentQuestion;   
    String titleContent;
    
    //The user's last answer
    String answer;
    
    //Potential Answers
    String l1;
    String l2;
    String l3;
    String l4;
    String l5;
    String l6;
    String l7;
    String l8;
    
    
    //Score
    int uScore = 0;
    
    //Strike default status
    int s1e = 0;
    int s2e = 0;
    int s3e = 0;
       
    //Kaune mode state
    int kMode = 0;
    
    
    /**
     * Creates new form FamilyFeud
     */
    public FamilyFeud() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        text1 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        text5 = new javax.swing.JLabel();
        panel3 = new javax.swing.JPanel();
        text2 = new javax.swing.JLabel();
        panel4 = new javax.swing.JPanel();
        text6 = new javax.swing.JLabel();
        panel5 = new javax.swing.JPanel();
        text3 = new javax.swing.JLabel();
        panel6 = new javax.swing.JPanel();
        text7 = new javax.swing.JLabel();
        panel7 = new javax.swing.JPanel();
        text4 = new javax.swing.JLabel();
        panel8 = new javax.swing.JPanel();
        text8 = new javax.swing.JLabel();
        GodModeButton = new javax.swing.JButton();
        score = new javax.swing.JLabel();
        strike3 = new javax.swing.JLabel();
        strike1 = new javax.swing.JLabel();
        strike2 = new javax.swing.JLabel();
        guessArea = new javax.swing.JPanel();
        field = new javax.swing.JTextField();
        button = new javax.swing.JButton();
        strikes1 = new javax.swing.JLabel();
        feud = new javax.swing.JLabel();
        family1 = new javax.swing.JLabel();
        titleArea = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text1, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel1);
        panel1.setBounds(320, 110, 160, 30);

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text5, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text5, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel2);
        panel2.setBounds(500, 110, 160, 30);

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text2, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel3);
        panel3.setBounds(320, 160, 160, 30);

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text6, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text6, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel4);
        panel4.setBounds(500, 160, 160, 30);

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text3, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text3, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel5);
        panel5.setBounds(320, 220, 160, 30);

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text7, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text7, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel6);
        panel6.setBounds(500, 220, 160, 30);

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text4, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text4, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel7);
        panel7.setBounds(320, 270, 160, 30);

        javax.swing.GroupLayout panel8Layout = new javax.swing.GroupLayout(panel8);
        panel8.setLayout(panel8Layout);
        panel8Layout.setHorizontalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text8, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel8Layout.setVerticalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text8, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panel8);
        panel8.setBounds(500, 270, 160, 30);

        GodModeButton.setText("Kaune Mode");
        GodModeButton.setEnabled(false);
        GodModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GodModeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(GodModeButton);
        GodModeButton.setBounds(20, 70, 120, 23);

        score.setFont(new java.awt.Font("AvantGarGotItcTEEDem", 3, 36)); // NOI18N
        score.setForeground(new java.awt.Color(0, 204, 255));
        score.setText("Score:");
        getContentPane().add(score);
        score.setBounds(20, 10, 290, 40);

        strike3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/strike copy.png"))); // NOI18N
        strike3.setEnabled(false);
        getContentPane().add(strike3);
        strike3.setBounds(380, 330, 110, 130);

        strike1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/strike copy.png"))); // NOI18N
        strike1.setEnabled(false);
        getContentPane().add(strike1);
        strike1.setBounds(160, 330, 110, 130);

        strike2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/strike copy.png"))); // NOI18N
        strike2.setEnabled(false);
        getContentPane().add(strike2);
        strike2.setBounds(270, 330, 110, 130);

        guessArea.setForeground(new java.awt.Color(51, 51, 51));

        field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldActionPerformed(evt);
            }
        });

        button.setText("Submit");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout guessAreaLayout = new javax.swing.GroupLayout(guessArea);
        guessArea.setLayout(guessAreaLayout);
        guessAreaLayout.setHorizontalGroup(
            guessAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, guessAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(field)
                .addContainerGap())
            .addGroup(guessAreaLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        guessAreaLayout.setVerticalGroup(
            guessAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guessAreaLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(button)
                .addGap(33, 33, 33))
        );

        getContentPane().add(guessArea);
        guessArea.setBounds(770, 280, 200, 170);

        strikes1.setFont(new java.awt.Font("AvantGarGotItcTEEDem", 3, 36)); // NOI18N
        strikes1.setForeground(new java.awt.Color(255, 0, 0));
        strikes1.setText("STRIKES:");
        getContentPane().add(strikes1);
        strikes1.setBounds(20, 380, 140, 40);

        feud.setFont(new java.awt.Font("ErasItcTEE", 3, 48)); // NOI18N
        feud.setForeground(new java.awt.Color(255, 204, 51));
        feud.setText("Feud!");
        getContentPane().add(feud);
        feud.setBounds(790, 60, 180, 60);

        family1.setFont(new java.awt.Font("ErasItcTEE", 3, 48)); // NOI18N
        family1.setForeground(new java.awt.Color(255, 204, 51));
        family1.setText("Family ");
        getContentPane().add(family1);
        family1.setBounds(740, 10, 230, 60);

        titleArea.setForeground(new java.awt.Color(51, 51, 51));

        title.setFont(new java.awt.Font("Franklin Gothic Heavy", 2, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Survey");

        javax.swing.GroupLayout titleAreaLayout = new javax.swing.GroupLayout(titleArea);
        titleArea.setLayout(titleAreaLayout);
        titleAreaLayout.setHorizontalGroup(
            titleAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        titleAreaLayout.setVerticalGroup(
            titleAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(titleArea);
        titleArea.setBounds(320, 0, 350, 70);

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/family-fuedbigger.png"))); // NOI18N
        getContentPane().add(image);
        image.setBounds(0, 0, 980, 460);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldActionPerformed

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
        
        int squid = (int)ran;
        //yt.eltuboadventista.com
        
        if (s3e == 0) {
        
        if (squid == 0) {
            
            answer = field.getText();
            
            l1 = "Mouse";
            l2 = "Keyboard";
            l3 = "Microphone";
            l4 = "Tablet";
            
            
            if (text1.getText().equals("1") || text2.getText().equals("2") || 
                    text3.getText().equals("3") || text4.getText().equals("4")){
                                                            
            
            if (answer.equalsIgnoreCase(l1)){
                
                text1.setText(l1);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l2)) {
                
                text2.setText(l2);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l3)) {
                
                text3.setText(l3);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l4)) {
                
                text4.setText(l4);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase("Kaune")){
                
                GodModeButton.setEnabled(true);
                
            } else {
                
                addStrike();
            }
                
                
                
                
                
            } else {
                
                
                title.setText("You Win!");
                score.setText("Final Score: " + uScore);
                
            }
            
            
            
            
        }
        
        
        if (squid == 1) {
            
            answer = field.getText();
            
            l1 = "Militarism";
            l2 = "Alliances";
            l3 = "Imperialism";
            l4 = "Nationalism";
            l5 = "Assassination";
            
            
            if (text1.getText().equals("1") || text2.getText().equals("2") || 
                    text3.getText().equals("3") || text4.getText().equals("4")
                    || text5.getText().equals("5")){
                
                
                if (answer.equalsIgnoreCase(l1)){
                
                text1.setText(l1);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l2)) {
                
                text2.setText(l2);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l3)) {
                
                text3.setText(l3);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l4)) {
                
                text4.setText(l4);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l5)) {
                
                text5.setText(l5);
                uScore += 10;
                score.setText("Score: " + uScore);
            
            } else if (answer.equalsIgnoreCase("Kaune")){
                
                GodModeButton.setEnabled(true);
                
            } else {
                
                addStrike();
            }
                
                
                
                
            } else {
                
                
                title.setText("You Win!");
                score.setText("Final Score: " + uScore);
            }
            
            
            
            
            
            
        }
        
        if (squid == 2) {
            
            answer = field.getText();
            
            l1 = "Swimming";
            l2 = "Surfing";
            l3 = "Water Skiing";
            l4 = "Kayaking";
            l5 = "Water Polo";
            l6 = "Sailing";
            l7 = "Rowing";
            l8 = "Diving";
            
            if (text1.getText().equals("1") || text2.getText().equals("2") || 
                    text3.getText().equals("3") || text4.getText().equals("4")
                    || text5.getText().equals("5") || 
                    text6.getText().equals("6") || text7.getText().equals("7")
                    || text8.getText().equals("8")){
                
                
                if (answer.equalsIgnoreCase(l1)){
                
                text1.setText(l1);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l2)) {
                
                text2.setText(l2);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l3)) {
                
                text3.setText(l3);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l4)) {
                
                text4.setText(l4);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l5)) {
                
                text5.setText(l5);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l6)) {
                
                text6.setText(l6);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l7)) {
                
                score.setText("Score: " + uScore);
                uScore += 10;
                score.setText(l7);
            } else if (answer.equalsIgnoreCase(l8)){
                
                text8.setText(l8);
                uScore += 10;
                score.setText("Score: " + uScore);
                
            } else if (answer.equalsIgnoreCase("Kaune")){
                
                GodModeButton.setEnabled(true);
                
            } else {
                
                addStrike();
            }
                
                
                
            } else {
                
                
                title.setText("You Win!");
                score.setText("Final Score: " + uScore);
            }
            
            
            
            
            
        }
        
        if (squid == 3) {
            
            answer = field.getText();
            
            l1 = "Fe";
            l2 = "H";
            l3 = "O";
            l4 = "C";
            l5 = "Au";
            l6 = "He";
            l7 = "Ag";
            l8 = "Mg";
            
            if (text1.getText().equals("1") || text2.getText().equals("2") || 
                    text3.getText().equals("3") || text4.getText().equals("4")
                    || text5.getText().equals("5") || 
                    text6.getText().equals("6") || text7.getText().equals("7")
                    || text8.getText().equals("8")){
                
                
                
                if (answer.equalsIgnoreCase(l1)){
                
                text1.setText(l1);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l2)) {
                
                text2.setText(l2);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l3)) {
                
                text3.setText(l3);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l4)) {
                
                text4.setText(l4);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l5)) {
                
                text5.setText(l5);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l6)) {
                
                text6.setText(l6);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l7)) {
                
                text7.setText(l7);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l8)){
                
                text8.setText(l8);
                uScore += 10;
                score.setText("Score: " + uScore);
                
            } else if (answer.equalsIgnoreCase("Kaune")){
                
                GodModeButton.setEnabled(true);
                
            } else {
                
                addStrike();
            }
                
                
            } else {
                
                
                title.setText("You Win!");
                score.setText("Final Score: " + uScore);
            }
            
            
            
        }
        
        if (squid == 4){
            
            answer = field.getText();
            
            l1 = "Canada";
            l2 = "United States";
            l3 = "Russia";
            l4 = "France";
            l5 = "Spain";
            l6 = "China";
            l7 = "Australia";
            l8 = "Mexico";
            
            if (text1.getText().equals("1") || text2.getText().equals("2") || 
                    text3.getText().equals("3") || text4.getText().equals("4")
                    || text5.getText().equals("5") || 
                    text6.getText().equals("6") || text7.getText().equals("7")
                    || text8.getText().equals("8")){
                
                
                
                if (answer.equalsIgnoreCase(l1)){
                
                text1.setText(l1);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l2)) {
                
                text2.setText(l2);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l3)) {
                
                text3.setText(l3);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l4)) {
                
                text4.setText(l4);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l5)) {
                
                text5.setText(l5);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l6)) {
                
                text6.setText(l6);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l7)) {
                
                text7.setText(l7);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l8)){
                
                text8.setText(l8);
                uScore += 10;
                score.setText("Score: " + uScore);
                
            } else if (answer.equalsIgnoreCase("Kaune")){
                
                GodModeButton.setEnabled(true);
                
            } else {
                
                addStrike();
            }
                
                
            } else {
                
                title.setText("You Win!");
                score.setText("Final Score: " + uScore);
            }
            
            
            
            
        }
        
        if (squid == 5){
            
            answer = field.getText();
            
            l1 = "Dog";
            l2 = "Cat";
            l3 = "Fish";
            l4 = "Bird";
            l5 = "Snake";
            l6 = "Lizard";
            l7 = "Spider";
            l8 = "Frog";            
            
            if (text1.getText().equals("1") || text2.getText().equals("2") || 
                    text3.getText().equals("3") || text4.getText().equals("4")
                    || text5.getText().equals("5") || 
                    text6.getText().equals("6") || text7.getText().equals("7")
                    || text8.getText().equals("8")) {
                
                
                
                if (answer.equalsIgnoreCase(l1)){
                
                text1.setText(l1);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l2)) {
                
                text2.setText(l2);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l3)) {
                
                text3.setText(l3);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l4)) {
                
                text4.setText(l4);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l5)) {
                
                text5.setText(l5);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l6)) {
                
                text6.setText(l6);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l7)) {
                
                text7.setText(l7);
                uScore += 10;
                score.setText("Score: " + uScore);
            } else if (answer.equalsIgnoreCase(l8)){
                
                text8.setText(l8);
                uScore += 10;
                score.setText("Score: " + uScore);
                
            } else if (answer.equalsIgnoreCase("Kaune")){
                
                GodModeButton.setEnabled(true);
                
            } else {
                
                addStrike();
            }
                
                
            } else {
                
                title.setText("You Win!");
                score.setText("Final Score: " + uScore);
            }
            
            
            
        }
        
        
        
        } else {
            
        title.setText("Sorry, game over");
            
        score.setText("Final Score: " + uScore);
        }
        
        
    }//GEN-LAST:event_buttonActionPerformed

    
    /**
     * 
     * The formWindowActivated is called when the application is first run.
     * It displays the survey question, and sets up the boxes to display the
     * number of questions.
     * 
     * @param evt 
     */
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
                
        //Getting the return
        titleContent = surveyChoose();
        
        //Setting the title to the question
        title.setText(titleContent);
        
        
        if (ran == 0){
            
            text1.setText("1");
            text2.setText("2");
            text3.setText("3");
            text4.setText("4");
            
        } else if (ran == 1){
            
            text1.setText("1");
            text2.setText("2");
            text3.setText("3");
            text4.setText("4");
            text5.setText("5");
            
        } else if (ran == 2){
            
            text1.setText("1");
            text2.setText("2");
            text3.setText("3");
            text4.setText("4");
            text5.setText("5");
            text6.setText("6");
            text7.setText("7");
            text8.setText("8");
            
        } else if (ran == 3){
            
            text1.setText("1");
            text2.setText("2");
            text3.setText("3");
            text4.setText("4");
            text5.setText("5");
            text6.setText("6");
            text7.setText("7");
            text8.setText("8");
            
        } else if (ran == 4){
            
            text1.setText("1");
            text2.setText("2");
            text3.setText("3");
            text4.setText("4");
            text5.setText("5");
            text6.setText("6");
            text7.setText("7");
            text8.setText("8");
            
        } else if (ran == 5){
            
            text1.setText("1");
            text2.setText("2");
            text3.setText("3");
            text4.setText("4");
            text5.setText("5");
            text6.setText("6");
            text7.setText("7");
            text8.setText("8");
            
        }
        
        
        
    }//GEN-LAST:event_formWindowActivated

    private void GodModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GodModeButtonActionPerformed
        
        if (kMode == 0){
            
        System.out.println("EVAN RUNS OUT OF TIME...");
        
        //New survey
        ran = (Math.floor(Math.random()*(max - min + 1) + min));
        
        resetStrikes();
        
        title.setText("Guess the survey!");
        
        score.setText("KAUNE");
        strikes1.setText("Kaunes:");
        button.setText("Kaune");
        family1.setText("KAUNE'S");
        feud.setText("FEUD");
            
        kMode = 1;    
        
        } else if (kMode == 1){
            
        //Getting the return
        titleContent = surveyChoose();
        
        //Setting the title to the question
        title.setText(titleContent);
            
        resetStrikes();
        
        score.setText("Score: ");
        strikes1.setText("Strikes:");
        button.setText("Submit");
        family1.setText("Family");
        feud.setText("Feud");
        
        kMode = 0;
        
        }
        
        
        //System.exit(s1e);
    }//GEN-LAST:event_GodModeButtonActionPerformed

    
    /**
     * 
     * The surveyChoose method picks a random survey for this specific game.
     * It first generates a random number.
     * It then uses that number to select a one of the array's indexes.
     * The string that is selected is then returned and set as the current
     * survey question and is displayed.
     * 
     * @return 
     */
    
    
    public String surveyChoose() {
        
        
        //Generating a random number (will be used to choose a random survey question)
        ran = (Math.floor(Math.random()*(max - min + 1) + min));
        
        //Turning it into an int for simplicity
        sChoice = (int)ran;
        
        //Turning the number into its survey question
        currentQuestion = questionList[sChoice];
        
        //Returning currentQuestion
        return(currentQuestion);
                        
    }
    
    
    /**
     * 
     * The addStrike method is used to add a strike.
     * It first checks if the first strike has been added.
     * If not, it enables it. The next time it is called it will do the same
     * but to the second strike, and then the third.
     * 
     */
    
    
    
    public void addStrike() {
        
        if(s1e == 0) {
            strike1.setEnabled(true);
            s1e = 1;
        } else if (s2e == 0) {
            strike2.setEnabled(true);
            s2e = 1;
        } else if (s3e == 0) {
            strike3.setEnabled(true);
            s3e = 1;
        }
        
    }
    
        public void resetStrikes() {
        
        while (s1e == 1 || s2e == 1 || s3e == 1){
            
            if(s1e == 1) {
            strike1.setEnabled(false);
            s1e = 0;
        } else if (s2e == 1) {
            strike2.setEnabled(false);
            s2e = 0;
        } else if (s3e == 1) {
            strike3.setEnabled(false);
            s3e = 0;
        }
            
        }
            
        
        
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FamilyFeud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FamilyFeud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FamilyFeud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FamilyFeud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        //Calling surveyChoose to pick a survey question
        //surveyChoose();
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FamilyFeud().setVisible(true);
            }
        });
        
        
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GodModeButton;
    private javax.swing.JButton button;
    private javax.swing.JLabel family1;
    private javax.swing.JLabel feud;
    private javax.swing.JTextField field;
    private javax.swing.JPanel guessArea;
    private javax.swing.JLabel image;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel panel7;
    private javax.swing.JPanel panel8;
    private javax.swing.JLabel score;
    private javax.swing.JLabel strike1;
    private javax.swing.JLabel strike2;
    private javax.swing.JLabel strike3;
    private javax.swing.JLabel strikes1;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text2;
    private javax.swing.JLabel text3;
    private javax.swing.JLabel text4;
    private javax.swing.JLabel text5;
    private javax.swing.JLabel text6;
    private javax.swing.JLabel text7;
    private javax.swing.JLabel text8;
    private javax.swing.JLabel title;
    private javax.swing.JPanel titleArea;
    // End of variables declaration//GEN-END:variables
}
